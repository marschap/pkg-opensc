'\" t
.\"     Title: sc_asn1_find_tag
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.1 <http://docbook.sf.net/>
.\"      Date: 02/16/2010
.\"    Manual: OpenSC API reference
.\"    Source: opensc
.\"  Language: English
.\"
.TH "SC_ASN1_FIND_TAG" "3" "02/16/2010" "opensc" "OpenSC API reference"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sc_asn1_find_tag \- Find a tag in an ASN\&.1 stream
.SH "SYNOPSIS"
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
#include <opensc\&.h>

const unsigned char *sc_asn1_find_tag(struct sc_context *ctx,
                                      const unsigned char *buf, size_t buflen,
                                      unsigned int tag_in, size_t *taglen_in);
		
.fi
.if n \{\
.RE
.\}
.sp
.SH "DESCRIPTION"
.PP
This function tries to find an ASN\&.1 tag matching
\fItag_in\fR
in the buffer pointed to by
\fIbuf\fR, which is of size
\fIbuflen\fR\&. The buffer should contain a series of ASN\&.1 entries\&.
.SH "RETURN VALUE"
.PP
If the specified tag was not found, NULL is returned\&. If found, the address where it was found is returned, and
\fItaglen_in\fR
is set to the length of the found tag\&.

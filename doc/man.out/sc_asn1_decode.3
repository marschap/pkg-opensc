'\" t
.\"     Title: sc_asn1_decode
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.1 <http://docbook.sf.net/>
.\"      Date: 12/18/2009
.\"    Manual: OpenSC API reference
.\"    Source: opensc
.\"  Language: English
.\"
.TH "SC_ASN1_DECODE" "3" "12/18/2009" "opensc" "OpenSC API reference"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sc_asn1_decode \- Extract entries from an ASN\&.1 stream
.SH "SYNOPSIS"
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
#include <opensc\&.h>

int sc_asn1_decode(struct sc_context *ctx, struct sc_asn1_entry *asn1,
                   const unsigned char *inbuf, size_t len,
                   const unsigned char **newbuf, size_t *len_left);
		
.fi
.if n \{\
.RE
.\}
.sp
.SH "DESCRIPTION"
.PP
This function extracts information from the ASN\&.1 stream pointed to by
\fIinbuf\fR
(which is
\fIlen\fR
bytes in size) and stores it into the array of
struct sc_asn_1
entries pointed to by
\fIasn1\fR\&. The array must be big enough to contain all the entries that will be found, or an error will be flagged\&. The last entry in the array must be a NULL entry, i\&.e\&. the
\fIname\fR
field must be set to NULL\&.
.PP
The structure of the expected data must be encoded in the entries in
\fIasn1\fR
before calling this function; specifically the
\fIname\fR,
\fItype\fR,
\fItag\fR
and
\fIflags\fR
fields must be filled in\&.
.PP
The function will then scan the stream and fill in the remaining fields\&.
\fInewbuf\fR
will point to the byte immediately following the extracted record, and
\fIlen_left\fR
will contain the number of bytes left in the buffer\&. Thus, the
\fInewbuf\fR
and
\fIlen_left\fR
fields may be passed in to sc_asn1_decode() again, as the
\fIinbuf\fR
and
\fIlen\fR
parameters, until
\fIlen\fR
reaches 0\&.
.SH "RETURN VALUE"
.PP
Returns 0 if successful, or a negative value in case of error\&.

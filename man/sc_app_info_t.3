.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "SC_APP_INFO_T" 3 "" "" "OpenSC API Reference"
.SH NAME
sc_app_info_t \- OpenSC application structure
.SH "SYNOPSIS"

.PP


.nf

#include <opensc\&.h>

#define SC_MAX_AID_SIZE            16

typedef struct sc_app_info {
	unsigned char aid[SC_MAX_AID_SIZE];
	size_t aid_len;
	char *label;
	sc_path_t path;
	unsigned char *ddo;
	size_t ddo_len;

	const char *desc;
	int rec_nr;
} sc_app_info_t;
			
.fi
 

.SH "DESCRIPTION"

.PP
This structure describes a smart card application\&. It contains the following members:

.TP
aid
The applications's AID\&. An AID uniquely identifies an application, and consists of an RID (a 5\-byte "Registered Application Provider Identifier") and a PIX, which identifies an application by that provider\&. For example, the RID for PKCS#15 consists of the bytes A0 00 00 00 63, and the PIX is the string "PKCS\-15"\&. Thus, the AID of a PKCS#15 application on a smart card is A0 00 00 00 63 50 4B 43 53 2D 31\&.

.TP
aid_len
The length of the AID in bytes\&.

.TP
label
A UTF\-8 string describing the application\&.

.TP
path
The application's full path on the card, starting at the MF\&.

.TP
ddo


.TP
ddo_len


.TP
desc
A description of the application, if available\&.

.TP
rec_nr
If the EF(DIR) file is record\-structured, this has the record number in which this application is stored\&. Otherwise, this is \-1\&.
 


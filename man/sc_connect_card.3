.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "SC_CONNECT_CARD" 3 "" "" "OpenSC API Reference"
.SH NAME
sc_connect_card \- Connect to smart card in reader
.SH "SYNOPSIS"

.PP


.nf

#include <opensc\&.h>

int sc_connect_card(sc_reader_t *reader, int slot, sc_card_t **card);
		
.fi
 

.SH "DESCRIPTION"

.PP
This function connects to a card in a reader, resets the card and retrieves the ATR (Answer To Reset)\&. Based on the ATR, it tries to auto\-detect which card driver to use\&.

.PP
The \fIslot\fR parameter identifies the card reader's slot\&. Slots are numbered consecutively, starting at 0\&.

.PP
If OpenSC was able to connect to the card, a pointer to the sc_card_t object is stored in the location pointer to by the \fIcard\fR parameter\&. The card handle should be released with sc_disconnect_card when no longer in use\&.

.SH "RETURN VALUE"

.PP
Returns 0 if successful, or a negative value in case of error\&.


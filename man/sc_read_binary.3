.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "SC_READ_BINARY" 3 "" "" "OpenSC API Reference"
.SH NAME
sc_read_binary \- Read a file
.SH "SYNOPSIS"

.PP


.nf

#include <opensc\&.h>

int sc_read_binary(struct sc_card *card, unsigned int offset,
                   unsigned char *buf, size_t count,
                   unsigned long flags);
		
.fi
 

.SH "DESCRIPTION"

.PP
This function reads from a transparent elementary file (EF) on \fIcard\fR\&. It corresponds to the ISO 7816 READ BINARY function\&. Call sc_select_file() first to select the file to read from\&.

.PP
The data read from the file is stored in \fIbuf\fR, which is\fIcount\fR bytes long\&.

.PP
The \fIoffset\fR argument specifies the file offset in bytes\&. The\fIflags\fR argument is currently not used, and should be set to 0\&.

.SH "RETURN VALUE"

.PP
If successful, the number of bytes read is returned\&. Otherwise, a negative value is returned\&.


.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "SC_ASN1_ENCODE" 3 "" "" "OpenSC API Reference"
.SH NAME
sc_asn1_encode \- Encode ASN.1 entries into a stream
.SH "SYNOPSIS"

.PP


.nf

#include <opensc\&.h>

int sc_asn1_encode(struct sc_context *ctx, const struct sc_asn1_entry *asn1,
                   unsigned char **newbuf, size_t *size);
		
.fi
 

.SH "DESCRIPTION"

.PP
This function encodes an array of entries pointed to by \fIasn1\fR and terminated by a NULL entry (i\&.e\&. where the name field of the entry is NULL) into a newly allocated buffer\&.

.PP
The new buffer containing the ASN\&.1 stream will be stored in \fInewbuf\fR, and the size of this buffer is stored in \fIsize\fR\&. The application must free this buffer after use\&.

.SH "RETURN VALUE"

.PP
Returns 0 if successful, or a negative value in case of error\&.


.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "SC_SELECT_FILE" 3 "" "" "OpenSC API Reference"
.SH NAME
sc_select_file \- Select a file on a smart card
.SH "SYNOPSIS"

.PP


.nf

#include <opensc\&.h>

int sc_select_file(sc_card_t *card,
                   const sc_path_t *path,
                   sc_file_t **result);

		
.fi
 

.SH "DESCRIPTION"

.PP
This function selects the file specified by \fIpath\fR\&. If\fIpath\fR specifies a file within the currently selected DF, sc_select_file() will\fInot\fR select the MF first, but interpret the path relative to the current DF\&. It does this in order to prevent losing any authorizations previously established with the card (e\&.g\&. by presenting a PIN)\&.

.PP
If \fIresult\fR is not NULL, an sc_file_t object is created, and the pointer to this object is stored in the location pointed to by\fIresult\fR\&. This handle should later be released using sc_file_free()\&.

.SH "RETURN VALUE"

.PP
If an error occurred, a negative error code is returned\&. Otherwise, the function will return 0\&.


.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "SC_FILE_T" 3 "" "" "OpenSC API Reference"
.SH NAME
sc_file_t \- OpenSC file structure
.SH "SYNOPSIS"

.PP


.nf

#include <opensc\&.h>

typedef struct sc_file {
    struct sc_path    path;
    int               type, ef_structure;
    size_t            size;
    int               id;

    /* record structured files only */
    int               record_length;
    int               record_count;
} sc_file_t;
            
.fi
 

.SH "DESCRIPTION"

.PP
This structure describes a file object on a smart card\&. It contains the following members: 

.TP
path
This is full the path to the file, starting at the MF\&.

.TP
type
This is the file type\&. It can be one of SC_FILE_TYPE_DF, SC_FILE_TYPE_WORKING_EF, or SC_FILE_TYPE_INTERNAL_EF\&. The latter is used by some cards only, and you normally shouldn't have to deal with these files\&.

.TP
ef_structure
For elementary files (EFs), this field describes the file's structure\&. It can be one of:

.IP
SC_FILE_EF_TRANSPARENT

SC_FILE_EF_LINEAR_FIXED

SC_FILE_EF_LINEAR_FIXED_TLV

SC_FILE_EF_LINEAR_VARIABLE

SC_FILE_EF_LINEAR_VARIABLE_TLV

SC_FILE_EF_CYCLIC

SC_FILE_EF_CYCLIC_TLV

SC_FILE_EF_UNKNOWN

.LP
 

.TP
size
gives the file's size in bytes\&.

.TP
id
gives the file's ID, as a 16\-bit number\&.

.TP
record_count, record_length
For record structured files, record_sount specifies the number of records in the file\&. For files with fixed length records,record_length contains the record length\&.
 

